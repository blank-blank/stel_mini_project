{
  "Parameters" : {

    "KeyName": {
      "Description" : "Name of an existing EC2 key pair to enable SSH access to the instances",
      "Type": "AWS::EC2::KeyPair::KeyName",
      "ConstraintDescription" : "must be the name of an existing EC2 KeyPair."
    },

    "InstanceType" : {
      "Description" : "Web Server EC2 instance type",
      "Type" : "String",
      "Default" : "t2.small",
      "AllowedValues" : [ "t1.micro", "t2.nano", "t2.micro", "t2.small", "t2.medium", "t2.large", "m1.small"]
,
      "ConstraintDescription" : "must be a valid EC2 instance type."
    }

  },

    "Resources" : {

        "Ec2Instance" : {
          "Type" : "AWS::EC2::Instance",
          "Properties" : {
            "ImageId" : "ami-f303fb93",
            "KeyName" : { "Ref" : "KeyName" },
            "InstanceType" : { "Ref" : "InstanceType" },
            "NetworkInterfaces": [ {
              "AssociatePublicIpAddress": "true",
              "DeviceIndex": "0"
            } ],

            "UserData" : { "Fn::Base64" : { "Fn::Join" : ["", [
                       "#!/bin/bash -xe\n",
                       "yum update -y aws-cfn-bootstrap\n",

                       "/opt/aws/bin/cfn-init -v ",
                       "         --stack ", { "Ref" : "AWS::StackName" },
                       "         --resource Ec2Instance ",
                       "         --configsets mini_project_install ",
                       "         --region ", { "Ref" : "AWS::Region" }, "\n"
            ]]}}


          },

          "Metadata" : {
            "AWS::CloudFormation::Init" : {
            "configSets" : {
            "mini_project_install" : ["install_git", "install_ansible", "get_playbooks", "run_playbook"]
          },

          "install_git":{
            "packages" : {
                "yum" :{
                    "git" : []
                }
            }
          },
          "install_ansible":{
	    "commands" : {
	        "01_pip_ansible" : {
		    "command" : "pip install ansible"
                }
	    }
	  
          },

          "get_playbooks" : { 
            "commands" : {
                "01_clone_repo" : {
                    "command" : "sudo git clone https://github.com/blank-blank/stel_mini_project.git /opt/stel_mini_project"
                }
            
              }
           },

           "run_playbook" : {

                "command" : "ansible-playbook -i 'localhost,' -c local /opt/stel_mini_project/ansible/mini_project.yml"
          }

        }
        }
    }
    }
}
